<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>items_data_load();
global.terr_no=0;
global.ct_no=0;
global.fnt_numbers=font_add_sprite(spr_font_no,ord('0'),1,1);
script_initlines();
blind=0;
alpha=1;
script_addline("HELLO");
//application_surface_draw_enable(false);

//alarm[0]=room_speed*3;

if global.last_skin==-1{
instance_create(0,0,obj_playerspr_choose);
global.player_sprite=spr_player_0;
}
else
global.player_sprite=global.last_skin;

global.__ping=0;

frame_skip=0;

terr=0;
ct=0;
to_draw="";

count=0;

device_mouse_bgs();

max_fps=0; //fps count
min_fps=0; //fps count
max_r_fps=0; //real fps
min_r_fps=0; //real fps;

if (global._CREATE_CON)
{
instance_create(0,0,obj_console_ico);
}
req=-1;
alarm[1]=room_speed*10 // upload data after 5 seconds.
q_exit=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Upload data
//req=data_upload("tmp");
alarm[1]=room_speed*10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Alarm [0] call-lastmap"+string(global.lastmap));
map_load(global.lastmap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Winning
if (global.ct_no&lt;=0)
{
to_draw="Terr Wins!";
count++;
if (count==1)
audio_play_sound(snd_terr_win,0,0);
if (count&gt;=room_speed*3)
{
if (instance_exists(obj_Player))
{
global._resume=true;
global._playergrid=ds_grid_write(obj_Player.weapondata);
show_debug_message(global._playergrid);
}
else
global._resume=false;

if file_exists(global.lastmap)
map_load(global.lastmap);
else{
con_add("Error! Cant restart round map file not exists "+string(global.lastmap),c_red);
room_goto(rm_menu);
}
}

}

if (global.terr_no&lt;=0)
{
to_draw="CT Wins!";
count++;
if (count==1)
audio_play_sound(snd_ct_win,0,0);
if (count&gt;=room_speed*3)
{
if (instance_exists(obj_Player))
{
global._resume=true;
global._playergrid=ds_grid_write(obj_Player.weapondata);
show_debug_message(global._playergrid);
}
else
global._resume=false;
global.last_skin=global.player_sprite;
if file_exists(global.lastmap)
map_load(global.lastmap);
else{
con_add("Error! Cant restart round map file not exists "+string(global.lastmap),c_red);
room_goto(rm_menu);
}
}
}

//*/

if (instance_exists(obj_Player))
if (os_type==os_windows)
{
if (instance_exists(obj_ShootButton))
with (obj_ShootButton){

          var new_angle=point_direction(obj_Player.x,obj_Player.y,mouse_x,mouse_y);
          
      //    var dd,ts;
       //   dd = ((((new_angle - image_angle) mod 360) + 540) mod 360) - 180; //get the head rotation
       //   direction = new_angle; // min(abs(dd), (20/fps)*room_speed) * sign(dd);  
       //   image_alpha=.9;

//          x=xx+lengthdir_x(20,direction);
     //     y=yy+lengthdir_y(20,direction);
          

          //make character point towards mouse
    //      var dd,ts;
    //      dd = ((((new_angle - obj_Player.image_angle) mod 360) + 540) mod 360) - 180; //get the head rotation
   //       obj_Player.image_angle += min(abs(dd), (20/fps)*room_speed) * sign(dd);  

 }
 if (instance_exists(obj_RoundButton)){
 with (obj_RoundButton){

     if (keyboard_check(vk_up)){
     x=xx;
     y=yy+lengthdir_y(20,90);
     global.move=true;
     }else
     if (keyboard_check(vk_down)){
     global.move=true;
     x=xx
     y=yy+lengthdir_y(20,270);
     }else
      if (keyboard_check(vk_left)){
     global.move=true;
     x=xx+lengthdir_x(20,180);
     y=yy
     }else
     if (keyboard_check(vk_right)){
     global.move=true;
     x=xx+lengthdir_x(20,0);
     y=yy
     }else global.move=0;
if (global.move==1) image_alpha=1;
 }
 }
 
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>device_mouse_bgs();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set GUI size and frameskip(absolute)
display_set_gui_size(view_wview,view_hview);
/*frame_skip ++;
if (frame_skip mod 5) == 0
   {
   draw_enable_drawevent(true);
   }
else
   {
   draw_enable_drawevent(false);
   }*/


if (blind==true) alpha-=0.005;

if (alpha&lt;=0) blind=0;

_fps=fps;
if (_fps&lt;min_fps)
{
min_fps=_fps;
}
_fps=fps;
if (_fps&gt;max_fps)
{
max_fps=_fps;
}


_fps=fps_real;
if (_fps&lt;min_r_fps)
{
min_r_fps=_fps;
}
_fps=fps_real;
if (_fps&gt;max_r_fps)
{
max_r_fps=_fps;
}

if keyboard_check_pressed(vk_control)
{
if (instance_exists(o_Console))
{
o_Console.active=1;
}
else
instance_create(0,0,o_Console);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_Player))
if (distance_to_object(obj_Player))
{
if (obj_Player.image_angle==(point_direction(obj_Player.x,obj_Player.y,mouse_x,mouse_y)))
{
alpha=2;
blind=true;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (os_type==os_windows)
//player_shoot();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if async_load[? "id"] == q_exit
{
if async_load[? "status"]
{
sound_stop_all();
room_goto(rm_menu);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if ds_map_find_value(async_load, "id") == req
{
   var status = ds_map_find_value(async_load, "status");
   if status == 0
      {
      var result = ds_map_find_value(async_load, "result");
      con_add("Save status:","c_yellow");
      }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_texture_flush()
sound_stop_all();
global.last_skin=global.player_sprite;
con_add("FPS :"+string(min_fps)+","+string(max_fps)+" Real FPS:"+string(min_r_fps)+","+string(max_r_fps)+" %:"+string((min_r_fps+max_r_fps)/2),c_yellow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_blend_mode_ext(bm_src_alpha, bm_one);



/*if (application_surface_is_enabled()){
surface_resize(application_surface,view_wport,view_hport);
if (global.shader!=-1){

shader_set(global.shader);
draw_surface_stretched(application_surface,0,0,display_get_width(),display_get_height());
shader_reset();
}
else
draw_surface_stretched(application_surface,0,0,display_get_width(),display_get_height());
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_resize(application_surface,view_wview,view_hview)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (blind==1){
draw_set_alpha(alpha);
draw_set_colour(c_white);
draw_rectangle(0,0,view_wview,view_hview,0);
}
///------------dat win
if (ds_map_find_value(global.settings_map,"dat_win")){
draw_set_alpha(.3);
var c = ui_box_fill_colour;
draw_rectangle_colour(0,0,view_wview,52,c,c,c,c,0);
draw_set_alpha(1);
var c= ui_box_out_colour;
draw_rectangle_colour(0,0,view_wview,52,c,c,c,c,1);
}
///----------- HUD Items----


if (instance_exists(obj_Player)){
draw_set_blend_mode(bm_add);
draw_sprite_ext(spr_HudElements,0,(view_wview/2)-200,view_hview-(50),1,1,0,c_yellow,1);

draw_set_font(global.fnt_numbers);
draw_text_colour((view_wview/2)-140,view_hview-80,string(round(obj_Player.hp)),c_yellow,c_yellow,c_yellow,c_yellow,1);
draw_text_colour((view_wview/2)+100,view_hview-80,string(round(ds_grid_get(obj_Player.weapondata,ItemDat[obj_Player.weaponid,10],2)))+";"+string(round(ds_grid_get(obj_Player.weapondata,ItemDat[obj_Player.weaponid,10],1))),c_yellow,c_yellow,c_yellow,c_yellow,1);
draw_set_blend_mode(bm_normal);
///--- End of Hud Items----
with (obj_Player)
{
draw_sprite(spr_pointer,0,x+lengthdir_x(200,image_angle)-view_xview,y+lengthdir_y(200,image_angle)-view_yview);
}
}
draw_set_font(fnt_arial);
draw_set_alpha(1);
if (!instance_exists(obj_SHOP)){
script_drawlines(16,(view_hview/2)-100);}

if to_draw!=""
{
draw_set_font(fnt_arial);
draw_set_colour(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text((view_wview/2),50,to_draw);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_alpha(1);
draw_set_font(fnt_12);
}
//draw_text(0,50,string(global.terr_no)+"|"+string(global.ct_no));
if (instance_exists(obj_Player))
with obj_Player{
if (reloading==true)
{
if (ds_grid_get(weapondata,1,1)&gt;0){
draw_set_alpha(0.65);
draw_rectangle_colour((x-100)-view_xview,(y-140)-view_yview,(x+(ds_grid_get(weapondata,ItemDat[weapondata,10],2)/ItemDat[weaponid,4])*200)-view_xview,(y-100)-view_yview,c_yellow,c_yellow,c_yellow,c_yellow,0);
draw_set_alpha(1);
draw_rectangle_colour((x-100)-view_xview,(y-140)-view_yview,(x+200)-view_xview,(y-100)-view_yview,c_yellow,c_yellow,c_yellow,c_yellow,1);
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (q_exit&lt;=0)
q_exit=show_question_async("Exit?");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
