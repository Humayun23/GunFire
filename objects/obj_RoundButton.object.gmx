<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx=(view_xview+100);
yy=(view_yview+(view_hview-100));

x=xx;
y=yy;
alarm[0]=10;
sprite_index=spr_joystick;

display_set_gui_size(view_wport[0],view_hport[0]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xx;
y=yy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set position
xx=(view_xview+100);
yy=(view_yview+(view_hview-100));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//device_mouse_bgs();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var DeviceNum;
for( DeviceNum = 0; DeviceNum &lt;=4; DeviceNum += 1; )
{
    if( MouseTouch[DeviceNum] == 1 )
    { 
    
        if( distance_to_point(MouseX[DeviceNum], MouseY[DeviceNum])&lt;30 )
        {
        if (point_distance(xx,yy,MouseX[DeviceNum],MouseY[DeviceNum])&lt;100){

          {
          
          image_alpha=1;
//          image_angle = point_direction(xx,yy,x,y);
          global.move=true;
          x=MouseX[DeviceNum];
          y=MouseY[DeviceNum];

          }
          exit;
          }
          //else
          {
//          global.move=true;
//          x=xx+lengthdir_x(106,point_direction(x,y,MouseX[DeviceNum],MouseY[DeviceNum]));
//          y=yy+lengthdir_y(106,point_direction(x,y,MouseX[DeviceNum],MouseY[DeviceNum]))
          }
          
        }

        
        }
        
        
        
    }
/*    if (os_type==os_windows)
    {
    if (keyboard_check(vk_up)){
    global.move=true;
    y=yy-30;
    exit;
    }
    else
    if (keyboard_check(vk_down)){
    global.move=true;
    y=yy+30;
    exit;
    }
    if (keyboard_check(vk_left)){
    global.move=true;
    x=xx-30;
    exit;
    }
    else
    if (keyboard_check(vk_right)){
    global.move=true;
    x=xx+30;
    exit;
    }
    
    

    }*/

{
    if (instance_exists(obj_Player) and (os_type!=os_windows)) or instance_exists(obj_spectater)
     global.move=false;
     
     
         //x=xx;
        //y=yy;
        mp_linear_step_object(xx,yy,6,noone);
        //speed=0;
      //  image_alpha=0.8;
        }


if (!instance_exists(obj_Player)) and (!instance_exists(obj_spectater)) then
visible=false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_move_button,-1,xx-view_xview,yy-view_yview,1,1,0,c_white,1);
draw_sprite_ext(sprite_index,-1,x-view_xview,y-view_yview,1,1,image_angle,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
