<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text="Loading...";
loaded=0;
global.online_data=ds_map_create();
global.online_data[? "Online"]=0;
global.online_data[? "Name"]="Guest";

time=current_time;
alarm[0]=10;
to_copy=ds_list_create();
file_from="";
file_to_copy="";

file_number=0;
angle=0;
script_initlines_con(15);
global.rm=-1;

con_init();
con_add("Loading game...",c_blue);

n=0;

global._CREATE_CON = false;
global._CREATE_JSBT = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
file_number+=1;
loaded=((file_number+1)/n)*100;
str=ds_list_find_value(to_copy,file_number)+"|";

str_pos = 1;
num = 0;
str_temp = "";

while(str_pos &lt; string_length(str))
    {
    
    while (string_char_at(str, str_pos) != "|")
        {
        str_temp += string_char_at(str, str_pos);
        str_pos += 1;
        }
    val[num] = string(str_temp);
    str_pos += 1;
    num += 1;
    str_temp = "";
    }
    log_add("Checking file:"+string(val[0]));
    if (file_exists(working_directory+val[0]))
    {    log_add("Checking directory:"+string(_dir+"/"+val[1]));

    if (!directory_exists(_dir+"/"+val[1]))
      {
      log_add("Directory not found creating new...");
      directory_create(_dir+"/"+val[1]);
      }
    log_add("[Copying] Copying file "+string(val[0])+" to " +string(_dir+"/"+val[1]+val[0]));
    text="Copying file "+val[0];
    file_from=working_directory+val[0];
    file_to_copy=_dir+"/"+val[1]+val[0];
     
    
    show_debug_message(text);
    copy=file_copy(file_from,file_to_copy);
    log_add("Copying return value:"+string(copy));
    if (copy&lt;0)
    log_add("[Error]:["+string(copy)+"] is return value, copying failed!");

     show_debug_message("Copying status["+string(val[0])+"]: "+string(copy));
     }
if (file_number&gt;=(ds_list_size(to_copy)-1))
{
log_add("Writing OS info!");
f=file_text_open_write(global.g_dir+"sys/osinfo.txt");
os_map = os_get_info();
if os_map != -1
   {
   var size, key, i;
   size = ds_map_size(os_map);
   key = ds_map_find_first(os_map);
   for (i = 0; i &lt; size - 1; i++;)
      {
      map_data[i] = ds_map_find_value(os_map, key);
      file_text_write_string(f,map_data[i]);
      file_text_writeln(f);
      key = ds_map_find_next(os_map, key);
      }
   ds_map_destroy(os_map);
   }
file_text_close(f);

log_add("## Done loading first time!");
log_add("Time to complete:"+string(current_time-time)+"ms");;
text="All done..."
text="Checking load.png";
log_add("Checking load.png to finalize...");
if (file_exists(_dir+"/gfx/load.png"))
{
log_add("File found loading menu...");
text="File found loading menu";
room_goto_next();
return true;
}else {

log_add("[Error]-File not found! load.png");
text="Copying error or unkown error (file not exists "+string(_dir+"/gfx/load.png")+")";
show_message("Copying error or unkown error!") game_end(); return -1;
}
}else alarm[1]=3;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (os_type)
{
case os_win32 : _dir = working_directory+"GunFire"; text="OS Windows Found";break;
case os_android : _dir = "/storage/sdcard0/GunFire"; text="Android OS Found"; break;
case os_browser :  _dir = working_directory+"GunFire"; text="OS Browser Found";break;
}
global.g_dir=_dir+"/";
if (directory_exists(_dir))
{
global._logfile=file_text_open_write(_dir+"/sys/logs.txt");
log_add("Directory exists: "+string(global.g_dir))
}

var always_load_new=debug; //for test only!


show_debug_message(global.g_dir);
if (always_load_new==0){
if (directory_exists(_dir))
{
if (file_exists(_dir+"/sys/gameversion.txt"))
{
var f =file_text_open_read(_dir+"/sys/gameversion.txt")
ver = file_text_read_real(f);
log_add("Read Version:"+string(ver)+":Game Version:"+string(VERSION))
file_text_close(f);
if (ver==VERSION){
con_parse_file(_dir+"/sys/exec.txt");
log_add("Version:"+string(ver)+" check complete, data checking complete loading menu...");

room_goto_next();
return 0;
}
}
}
}
//if (directory_exists(_dir))
//{
//directory_destroy(_dir); //delete old dir;
//}
time=current_time;

directory_create(_dir);
directory_create(_dir+"/gfx");
directory_create(_dir+"/gfx/weapons");
directory_create(_dir+"/gfx/tiles");
directory_create(_dir+"/maps");
directory_create(_dir+"/sys");
global._logfile=file_text_open_write(_dir+"/sys/logs.txt");

log_add("Directory not exists: "+string(global.g_dir));
con_parse_file(global.g_dir+"sys\exec.txt");
log_add("Copying files to new directory...");
file=file_text_open_read(working_directory+"files.txt")
if (file&lt;=-1)
{
log_add("[ERROR]files.txt not found!");
show_message("File not found files.txt!")
game_end();
return -1;
}

line=''
log_add("Text in file.txt:")
while (!file_text_eof(file))
{
s=file_text_read_string(file);
//if (string_char_at(s,1)=="") break;
if not(string_char_at(s,1)=="#" and string_char_at(s,2)=="#"){
log_add(string(n+1)+"-"+string(s));
line[n]=s;
n++;
}else log_add("[#] Found after "+string(n-1));

file_text_readln(file);
//show_debug_message(line[n-1]);
}
log_add("All data readed!");
file_text_close(file);
for (i=0;i&lt;n;i++)
{
log_add("Reading line["+string(i)+" :"+string(line[i])+" and adding to list");
ds_list_add(to_copy,line[i]);
}
log_add("Copying files...");
log_add("time to 10");
alarm[1]=10;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle+=15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
draw_set_font(fnt_large);
draw_set_colour(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(room_width/2,(room_height/2)+200,text);
draw_set_blend_mode(bm_add);
draw_sprite_ext(spr_bar,-1,room_width/2,(room_height/2),1,1,angle,c_white,1);
draw_set_alpha(0.5);
draw_sprite_stretched(spr_loader,-1,(room_width/2)-400,(room_height/2)+100,800,30);
draw_set_alpha(1);
draw_sprite_stretched(spr_loader,-1,(room_width/2)-400,(room_height/2)+100,(loaded/100)*800,30);
draw_set_blend_mode(bm_normal);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
