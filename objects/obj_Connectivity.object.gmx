<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr=-1;
name="";
_id="";
spr_req=-1;
id_req=-1;
angle=0;
avatar=-1;
str="Checking Login...";
mode_req=-1;
mode="";
req=-1;
randomize();
rnd=irandom_range(1,255);
///Excute action;
//show_message("This process will check account conectivity with unrealsoftwares...");
name=get_string("Enter nick name:","");

if (name=="")
room_goto(rm_menu);

url_open("http://www.unrealsoftware.de/connect.php?setkey="+string(rnd));

msg=show_question_async("Please Hit YES After your Logedin");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle+=8;

if (_id=="IOException")
{
show_message("IOException Error!.Click ok to close")
room_goto(rm_menu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i_d = ds_map_find_value(async_load, "id");
if i_d == msg
   {
   if ds_map_find_value(async_load, "status")
      {
      req=http_get("http://www.unrealsoftware.de/connect.php?keyof="+string(name)+"&amp;iskey="+string(rnd))
      }
      else
      room_goto(rm_menu);
      
   }





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load,"id")==req)
{
if (ds_map_find_value(async_load,"status")==0)
{
res=ds_map_find_value(async_load,"result")
res=string(res);
show_debug_message("async status req :"+string(res));
if (res=="1")
  {
  id_req=http_get("http://www.unrealsoftware.de/connect.php?getid="+string(name))
  str="Getting ID...";
  }
  else{
  str="Connection Failed";
  show_message("Connection Failed. Result !1") room_goto(rm_menu);}
}
}

if (ds_map_find_value(async_load,"id")==id_req)
{
if (ds_map_find_value(async_load,"status")==0)
{
res=ds_map_find_value(async_load,"result")
show_debug_message("async status id req :"+string(res));
{
  str="Requesting mode...";
  _id=res;
  mode_req=http_get("http://www.unrealsoftware.de/getuserdata.php?id="+string(_id)+"&amp;data=modetxt")
  }
  }
}
if (ds_map_find_value(async_load,"id")==mode_req)
{
if (ds_map_find_value(async_load,"status")==0)
{
res=ds_map_find_value(async_load,"result")
show_debug_message("async status mode req :"+string(res));
{
 i=1;
 while (string_char_at(res,i)!="&gt;")
 {
 i++;
 }
 while (string_char_at(res,i)!="&lt;")
 {
 mode+=string_char_at(res,i);
 i++;
 
 }
  
  
  spr_req=http_get("http://www.unrealsoftware.de/getuserdata.php?id="+string(_id)+"&amp;data=avatar")
  }
  }
}


if (ds_map_find_value(async_load,"id")==spr_req)
{
if (ds_map_find_value(async_load,"status")==0)
{
str="Downloading Avatar";
res=ds_map_find_value(async_load,"result")
show_debug_message("async status avatar :"+string(res));

if (res!="")
{
global._ext=filename_ext(res);
avatar=http_get_file("http://www.unrealsoftware.de/"+string(res),"spr"+string(filename_ext(res)));
}
else
str="No avatar!";
}
}


if (ds_map_find_value(async_load,"id")==avatar)
{
if (ds_map_find_value(async_load,"status")==0)
{
show_debug_message("Avatar status 0.Adding");
spr=sprite_add("spr"+global._ext,0,0,0,0,0);
str="Done";
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_12);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_alpha(1);
draw_set_colour(c_gray);
draw_sprite_ext(spr_load,0,room_width/2,(room_height/2)+15,1,1,angle,c_white,1);
draw_text(room_width/2,(room_height/2)+50,str);
draw_set_halign(fa_left);
draw_set_valign(fa_top);


if (_id!=""){
draw_text(32,32,"ID:"+string(_id))
}
if (spr!=-1)
{
draw_sprite(spr,-1,room_width-sprite_get_width(spr),0);
}
if (name!="")
{
draw_text(32,48,"Name:"+string(name));
}
if (mode!="")
{
draw_text(32,64,"Mode:"+string(mode));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
