<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test
if (global.requested == true)
{
global.requested=false;
buffer_seek(Buffer,buffer_seek_start,0);
buffer_write(Buffer,buffer_u8,5); //Request data
network_send_packet(Socket,Buffer,buffer_tell(Buffer));
}

if !global.toserver instance_destroy(); //if not connected to server destroy.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
if instance_exists(obj_Player){
   buffer_seek( Buffer , buffer_seek_start , 0 );
   buffer_write( Buffer , buffer_u8 , 2 ); //Player Data
   buffer_write( Buffer , buffer_s32 , obj_Player.x );
   buffer_write( Buffer , buffer_s32 , obj_Player.y );
   buffer_write( Buffer , buffer_s32 , obj_Player.image_angle );
   buffer_write( Buffer , buffer_s32 , obj_Player.sprite_index );
   buffer_write( Buffer , buffer_s32 , obj_Player.image_index );
   buffer_write( Buffer , buffer_s32 , obj_Player.weaponid );
   buffer_write( Buffer , buffer_s32 , obj_Player.foot_index );
   
   Result = network_send_packet( Socket , Buffer , buffer_tell( Buffer ) );
   }
   else{
   buffer_seek( Buffer , buffer_seek_start , 0 );
   buffer_write( Buffer , buffer_u8 , 2 ); //Player Data
   buffer_write( Buffer , buffer_s32 , -100 );
   buffer_write( Buffer , buffer_s32 , -100 );
   buffer_write( Buffer , buffer_s32 , 0 );
   buffer_write( Buffer , buffer_s32 , 0 );
   buffer_write( Buffer , buffer_s32 , -1 );
   buffer_write( Buffer , buffer_s32 , -1 );
   buffer_write( Buffer , buffer_s32 , -1 );
   
   Result = network_send_packet( Socket , Buffer , buffer_tell( Buffer ) );
   }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   var type_event = ds_map_find_value( async_load , "type" );
   switch( type_event ) {
      case network_type_data:
         var buffer = ds_map_find_value( async_load , "buffer" );
         buffer_seek( buffer , buffer_seek_start , 0 );
         ReceivedPacket( buffer );
      break;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw_set_color( c_white );
//   draw_text(view_xview + view_wview-200 ,view_yview + 5  , "Connected: " + string( Result &gt;= 0 ) );
 //  draw_text(view_xview + view_wview-200 ,view_yview + 20 , "My Ping: "   + string( Ping ) );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
