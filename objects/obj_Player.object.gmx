<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_ai_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = point_direction(xprevious,yprevious,x,y);
spd = point_distance(xprevious,yprevious,x,y);
last_hitter_name="";
reloading=false;
global.money=300;
global.move=false;

image_speed=0;
image_index=0;
can_shoot=1;
scope=0;
hp=100;
//global.player_sprite=spr_player_0;
foot_index=0;
team=0;

torch=false;
torchinst=noone;
//instance_create(x,y,obj_flashico);
//sprite_index=global.player_spr;
mask_index=spr_mask;


if team==1 global.terr_no+=1;
else
if team==0 global.ct_no+=1;

laser=-1;

weapondata=ds_grid_create(5,5);
show_debug_message(global._resume);
if (global._resume==false)
{
ds_grid_set(weapondata,1,0,0) //default primary weapon
ds_grid_set(weapondata,2,0,9) //default secondary
ds_grid_set(weapondata,3,0,10) //default blade

ds_grid_set(weapondata,1,1,0) //primary weapon ammo rifle
ds_grid_set(weapondata,2,1,0) //secondary weapon ammo pistol
ds_grid_set(weapondata,3,1,999) //knife...
}
else
{
show_debug_message(global._playergrid);
ds_grid_read(weapondata,string(global._playergrid));
}
ini_open(global.g_dir+"sys\game.ini")
name = ini_read_string("Player","Name","Player");
ini_close();
count=10;
if (ds_grid_get(weapondata,1,0)!=0)
weaponid=weapondata[# 1 , 0]
else
weaponid=ds_grid_get(weapondata,2,0); //current weapon in hand;

killed_by="";
instance_create(0,0,obj_radar);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ach_add("totaldie",1);
if (killed_by!=""){
script_addline(string(name)+" killed by:"+killed_by)
}
if instance_exists(torchinst)
{
with torchinst instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reload
if ds_grid_get(weapondata,ItemDat[weaponid,10],2)&gt;=ItemDat[weaponid,4]{reloading=false; exit;}
if (ds_grid_get(weapondata,ItemDat[weaponid,10],1)&lt;=0) {reloading=false exit;}
if (ds_grid_get(weapondata,ItemDat[weaponid,10],1)&gt;0) //check if left bullets are &gt;0
{
ds_grid_set(weapondata,ItemDat[weaponid,10],2,ds_grid_get(weapondata,ItemDat[weaponid,10],2)+1);
ds_grid_set(weapondata,ItemDat[weaponid,10],1,ds_grid_get(weapondata,ItemDat[weaponid,10],1)-1);
alarm[1]=5/2;
reloading=true;
}
else{
reloading=false;
exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Canshoot=true;
can_shoot=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_move_slide(oSolid,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = point_direction(xprevious,yprevious,x,y);
spd = point_distance(xprevious,yprevious,x,y);

view_xview[0] = x - (view_wview[0] / 2);
view_yview[0] = y - (view_hview[0] / 2);

//view_xview[0] = x-360+(mouse_x-x)/4;
//view_yview[0] = y-240+(mouse_y-y)/4;

if (global.move==true)
{
direction=point_direction(obj_RoundButton.xx,obj_RoundButton.yy,obj_RoundButton.x,obj_RoundButton.y)
speed=(6/fps)*room_speed;
}
else
speed=0;

sprite_index=global.player_sprite;
if (speed&gt;0)
{
foot_index+=speed/12;
}
if (foot_index&gt;7)
foot_index=0;

/*if (keyboard_check(vk_up))
//{
//move=true;
//direction=90;
//speed=2;
}
else
if (keyboard_check(vk_down)){
move=true;
direction=270;
speed=2;
}
if (keyboard_check(vk_left))
{
move=true;
direction=180;
speed=2;
}else
if keyboard_check(vk_right)
{
{
move=true;
direction=0;
speed=2;
}
}*/

if (torch) and (torchinst!=noone)
{
torchinst.x=x;
torchinst.y=y;
torchinst.image_angle=image_angle;
}




if (ItemDat[weaponid,8]=="pistol" or ItemDat[weaponid,8]=="blade")
{
image_index=2;
}
else
image_index=0;


if (hp&lt;=0) hp=0;
if (hp&gt;100) hp=100;

/*if mouse_check_button(mb_left)
{
if  (point_distance(mouse_x,mouse_y,obj_RoundButton.x,obj_RoundButton.y)&gt;50 and point_distance(mouse_x,mouse_y,obj_ShootButton.x,obj_ShootButton.y)&gt;70)
{
direction=point_direction(x,y,mouse_x,mouse_y);
}
}*/


if (hp&lt;=0)
{
if (team==0) global.ct_no-=1;
else
if (team==1) global.terr_no-=1;

o_Controller.to_draw="You Died#Spectating";
killed_by=last_hitter_name;
instance_destroy();
instance_create(x,y,obj_spectater);

}

audio_listener_position(x,y,0);

if (ds_grid_get(weapondata,ItemDat[weaponid,10],1))&gt;ItemDat[weaponid,11]
{
ds_grid_set(weapondata,ItemDat[weaponid,10],1,ItemDat[weaponid,11]);
}

if (ds_grid_get(weapondata,ItemDat[weaponid,10],2)&lt;=0 and reloading=false and ds_grid_get(weapondata,ItemDat[weaponid,10],1)&gt;0)
{
reloading=true;
alarm[1]=1 //auto reload.
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ai_unit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x += lengthdir_x(1,point_direction(other.x+16,other.y+16,x,y)-5+random(5));
//y += lengthdir_y(1,point_direction(other.x+16,other.y+16,x,y)-5+random(5));
//scr_move_slide(other,15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x=xprevious;
//y=yprevious;

//x += lengthdir_x(1,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
//y += lengthdir_y(1,point_direction(other.x+16,other.y+16,x,y)-5+random(10));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other instance_destroy();

if (other.shooter!=id and other.team!=team)
{
var i = instance_create(x,y,obj_dir_bloodhit);
i.creater=id;
i.object = other.shooter;
instance_create(0,0,obj_blur);
last_hitter=other.shooter;
last_hitter_name=other.shootername;
hp-=other.damage;
instance_create(x,y,obj_groundblood);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scope=!scope;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite(mask_index,0,x,y);
draw_sprite_ext(spr_feet,foot_index,x,y,1,1,image_angle,c_white,1);
draw_sprite_ext(ItemDat[weaponid,2],-1,x,y,1,1,image_angle,c_white,1);
draw_self();
//draw_sprite(spr_pointer,0,x+lengthdir_x(100,image_angle),y+lengthdir_y(100,image_angle));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_set_fullscreen(!window_get_fullscreen());
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
